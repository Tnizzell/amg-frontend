{"ast":null,"code":"// Full Stripe + TTS + AI GF Backend Combined in Express (Frontend API URLs patched + success redirect)\nimport express from 'express';\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport Stripe from 'stripe';\nimport bodyParser from 'body-parser';\nimport axios from 'axios';\ndotenv.config();\nconst app = express();\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\napp.use(cors());\napp.use(express.json());\n\n// Stripe: One-Time Payment Intent (Optional)\napp.post('/create-payment-intent', async (req, res) => {\n  try {\n    const {\n      amount\n    } = req.body;\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount,\n      currency: 'usd',\n      automatic_payment_methods: {\n        enabled: true\n      }\n    });\n    res.send({\n      clientSecret: paymentIntent.client_secret\n    });\n  } catch (err) {\n    console.error('PaymentIntent error:', err);\n    res.status(500).send({\n      error: err.message\n    });\n  }\n});\n\n// Stripe: Create Checkout Session for Subscriptions\napp.post('/subscribe', async (req, res) => {\n  try {\n    const session = await stripe.checkout.sessions.create({\n      mode: 'subscription',\n      payment_method_types: ['card'],\n      line_items: [{\n        price: 'price_1NwB2B1aXGzabcDEF1234567',\n        // Replace with your actual Stripe Price ID\n        quantity: 1\n      }],\n      success_url: 'https://amg-frontend-site.onrender.com/success',\n      // Update with your actual frontend success page\n      cancel_url: 'https://amg-frontend-site.onrender.com/cancel'\n    });\n    res.json({\n      url: session.url\n    });\n  } catch (err) {\n    console.error('Stripe subscription error:', err);\n    res.status(500).json({\n      error: 'Unable to create Stripe session'\n    });\n  }\n});\n\n// Stripe: Subscription Webhook\napp.post('/webhook/stripe', bodyParser.raw({\n  type: 'application/json'\n}), (req, res) => {\n  const sig = req.headers['stripe-signature'];\n  let event;\n  try {\n    event = stripe.webhooks.constructEvent(req.body, sig, process.env.STRIPE_WEBHOOK_SECRET);\n  } catch (err) {\n    console.error('Webhook signature error:', err.message);\n    return res.status(400).send(`Webhook Error: ${err.message}`);\n  }\n  if (event.type === 'checkout.session.completed') {\n    const session = event.data.object;\n    const customerEmail = session.customer_email;\n    console.log(`âœ… PREMIUM USER CONFIRMED: ${customerEmail}`);\n    // TODO: Save premium user (email) to DB or flat file\n  }\n  res.json({\n    received: true\n  });\n});\n\n// AI Girlfriend Reply API\napp.post('/reply', (req, res) => {\n  const {\n    prompt,\n    premium,\n    worksafe,\n    mood\n  } = req.body;\n  let reply = `(${mood}) You said: ${prompt}`;\n  const nsfw = prompt.toLowerCase().includes(\"touch\") || mood === 'yandere';\n  if (nsfw && (!premium || worksafe)) {\n    return res.json({\n      reply: '',\n      nsfw: true\n    });\n  }\n  reply += premium ? ' ðŸ˜˜' : ' ðŸ˜‰';\n  res.json({\n    reply,\n    nsfw: false\n  });\n});\n\n// Text-to-Speech (ElevenLabs)\napp.post('/tts', async (req, res) => {\n  const {\n    text\n  } = req.body;\n  try {\n    const ttsRes = await axios.post('https://api.elevenlabs.io/v1/text-to-speech/EXAVITQu4vr4xnSDxMaL', {\n      text,\n      voice_settings: {\n        stability: 0.5,\n        similarity_boost: 0.75\n      }\n    }, {\n      headers: {\n        'xi-api-key': process.env.ELEVENLABS_API_KEY,\n        'Content-Type': 'application/json'\n      },\n      responseType: 'arraybuffer'\n    });\n    res.set('Content-Type', 'audio/mpeg');\n    res.send(ttsRes.data);\n  } catch (err) {\n    console.error('TTS failed:', err);\n    res.status(500).json({\n      error: 'TTS error'\n    });\n  }\n});\nconst PORT = process.env.PORT || 5001;\napp.listen(PORT, () => {\n  console.log(`ðŸš€ Backend running on https://amg-backend-501i.onrender.com`);\n});","map":{"version":3,"names":["express","cors","dotenv","Stripe","bodyParser","axios","config","app","stripe","process","env","STRIPE_SECRET_KEY","use","json","post","req","res","amount","body","paymentIntent","paymentIntents","create","currency","automatic_payment_methods","enabled","send","clientSecret","client_secret","err","console","error","status","message","session","checkout","sessions","mode","payment_method_types","line_items","price","quantity","success_url","cancel_url","url","raw","type","sig","headers","event","webhooks","constructEvent","STRIPE_WEBHOOK_SECRET","data","object","customerEmail","customer_email","log","received","prompt","premium","worksafe","mood","reply","nsfw","toLowerCase","includes","text","ttsRes","voice_settings","stability","similarity_boost","ELEVENLABS_API_KEY","responseType","set","PORT","listen"],"sources":["C:/Users/TNIZZ/Documents/amg-frontend/src/App.js"],"sourcesContent":["// Full Stripe + TTS + AI GF Backend Combined in Express (Frontend API URLs patched + success redirect)\nimport express from 'express';\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport Stripe from 'stripe';\nimport bodyParser from 'body-parser';\nimport axios from 'axios';\n\ndotenv.config();\nconst app = express();\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\n\napp.use(cors());\napp.use(express.json());\n\n// Stripe: One-Time Payment Intent (Optional)\napp.post('/create-payment-intent', async (req, res) => {\n  try {\n    const { amount } = req.body;\n    const paymentIntent = await stripe.paymentIntents.create({\n      amount,\n      currency: 'usd',\n      automatic_payment_methods: { enabled: true },\n    });\n    res.send({ clientSecret: paymentIntent.client_secret });\n  } catch (err) {\n    console.error('PaymentIntent error:', err);\n    res.status(500).send({ error: err.message });\n  }\n});\n\n// Stripe: Create Checkout Session for Subscriptions\napp.post('/subscribe', async (req, res) => {\n  try {\n    const session = await stripe.checkout.sessions.create({\n      mode: 'subscription',\n      payment_method_types: ['card'],\n      line_items: [\n        {\n          price: 'price_1NwB2B1aXGzabcDEF1234567', // Replace with your actual Stripe Price ID\n          quantity: 1,\n        },\n      ],\n      success_url: 'https://amg-frontend-site.onrender.com/success', // Update with your actual frontend success page\n      cancel_url: 'https://amg-frontend-site.onrender.com/cancel',\n    });\n    res.json({ url: session.url });\n  } catch (err) {\n    console.error('Stripe subscription error:', err);\n    res.status(500).json({ error: 'Unable to create Stripe session' });\n  }\n});\n\n// Stripe: Subscription Webhook\napp.post('/webhook/stripe', bodyParser.raw({ type: 'application/json' }), (req, res) => {\n  const sig = req.headers['stripe-signature'];\n  let event;\n  try {\n    event = stripe.webhooks.constructEvent(\n      req.body,\n      sig,\n      process.env.STRIPE_WEBHOOK_SECRET\n    );\n  } catch (err) {\n    console.error('Webhook signature error:', err.message);\n    return res.status(400).send(`Webhook Error: ${err.message}`);\n  }\n\n  if (event.type === 'checkout.session.completed') {\n    const session = event.data.object;\n    const customerEmail = session.customer_email;\n    console.log(`âœ… PREMIUM USER CONFIRMED: ${customerEmail}`);\n    // TODO: Save premium user (email) to DB or flat file\n  }\n  res.json({ received: true });\n});\n\n// AI Girlfriend Reply API\napp.post('/reply', (req, res) => {\n  const { prompt, premium, worksafe, mood } = req.body;\n  let reply = `(${mood}) You said: ${prompt}`;\n  const nsfw = prompt.toLowerCase().includes(\"touch\") || mood === 'yandere';\n\n  if (nsfw && (!premium || worksafe)) {\n    return res.json({ reply: '', nsfw: true });\n  }\n\n  reply += premium ? ' ðŸ˜˜' : ' ðŸ˜‰';\n  res.json({ reply, nsfw: false });\n});\n\n// Text-to-Speech (ElevenLabs)\napp.post('/tts', async (req, res) => {\n  const { text } = req.body;\n  try {\n    const ttsRes = await axios.post(\n      'https://api.elevenlabs.io/v1/text-to-speech/EXAVITQu4vr4xnSDxMaL',\n      {\n        text,\n        voice_settings: { stability: 0.5, similarity_boost: 0.75 }\n      },\n      {\n        headers: {\n          'xi-api-key': process.env.ELEVENLABS_API_KEY,\n          'Content-Type': 'application/json'\n        },\n        responseType: 'arraybuffer'\n      }\n    );\n    res.set('Content-Type', 'audio/mpeg');\n    res.send(ttsRes.data);\n  } catch (err) {\n    console.error('TTS failed:', err);\n    res.status(500).json({ error: 'TTS error' });\n  }\n});\n\nconst PORT = process.env.PORT || 5001;\napp.listen(PORT, () => {\n  console.log(`ðŸš€ Backend running on https://amg-backend-501i.onrender.com`);\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}